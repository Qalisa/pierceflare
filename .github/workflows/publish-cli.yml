name: Publish CLI

on:
  push:
    branches:
     - dev
     - main
    paths:
      - .helm/cli/Chart.yaml # on maybe new app version
      - .github/workflows/publish-cli.yml
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read
  packages: write # Needed to push to GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: service/package.json
      - name: Enforce Generation of OpenAPI specs
        run: make gen-api
        working-directory: cli

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically generated

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 
      - name: Extract appVersion from Helm Chart
        id: data-from-helm
        run: |
          APP_VERSION=$(yq e '.appVersion' .helm/cli/Chart.yaml)
          echo "appVersion=${APP_VERSION}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/pierceflare-cli # Adjust image name if needed
          tags: |
            type=ref,event=branch
            type=raw,value=${{ steps.data-from-helm.outputs.appVersion }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ github.ref_name }}-${{ steps.data-from-helm.outputs.appVersion }}
            type=raw,value=${{ steps.data-from-helm.outputs.appVersion }}-${{ github.ref_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./cli
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
  
  publish-helm-chart:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: .helm
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"