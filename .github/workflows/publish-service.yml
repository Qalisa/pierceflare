name: Publish Service

on:
  push:
    branches:
     - dev
     - main
    paths:
      - .helm/service/Chart.yaml # on maybe new app version
      - .github/workflows/publish-service.yml
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-push:
    runs-on: ${{ vars.PREFERRED_RUNS_ON }}
    steps:
    #
    - uses: actions/checkout@v4

    #
    - name: Login to Private repository
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.DOCKER_PRIVATE_REGISTRY_DOMAIN }}
        username: ${{ secrets.DOCKER_PRIVATE_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_PRIVATE_REGISTRY_PASSWORD }}

    # 
    - name: Setup BuildX for faster builds
      uses: docker/setup-buildx-action@v3

    # 
    - name: Extract appVersion from Helm Chart
      id: data-from-helm
      run: |
        APP_VERSION=$(yq e '.appVersion' .helm/Chart.yaml)
        FIRST_HOST=$(yq -r '.ingress.hosts[0]' .helm-values/values.${{ github.ref_name }}.yaml)
        echo "appVersion=${APP_VERSION}" >> $GITHUB_OUTPUT
        echo "canonicalUrl=https://${FIRST_HOST}" >> $GITHUB_OUTPUT

    #
    - name: Compute full image location
      id: meta-pre
      run: |
        ORG_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO_NAME=$(basename "${{ github.repository }}")
        echo "full_image_location=${{ vars.DOCKER_PRIVATE_REGISTRY_DOMAIN }}/${ORG_LOWER}/${REPO_NAME}" >> $GITHUB_OUTPUT
   
   #
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.meta-pre.outputs.full_image_location }}
        tags: |
          type=ref,event=branch
          type=raw,value=${{ steps.data-from-helm.outputs.appVersion }},enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value=${{ github.ref_name }}-${{ steps.data-from-helm.outputs.appVersion }}
          type=raw,value=${{ steps.data-from-helm.outputs.appVersion }}-${{ github.ref_name }}
    
    #
    - name: Build and push
      id: build_image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.service
        push: true
        target: lean
        build-args: |
          K8S_APP__VERSION=${{ steps.data-from-helm.outputs.appVersion }}
          CANONICAL_URL=${{ steps.data-from-helm.outputs.canonicalUrl }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        #
        # cache-from: type=registry,ref=${{ steps.meta-pre.outputs.full_image_location }}:cache
        # cache-to: type=registry,ref=${{ steps.meta-pre.outputs.full_image_location }}:cache,image-manifest=true,oci-mediatypes=true,mode=max
        outputs: type=image,push=true
